# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  pipelines:
  -task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'PublishProfile'
    PublishProfilePath: '$(System.DefaultWorkingDirectory)/**/*.pubxml'
    PublishProfilePassword: 'sud'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
  -pipeline: MyAppC
    project:NICE_APP_PR
    source:MyCIPipelineC
    branch:releases/M159
    version:20190718.2
  trigger:
      branches:
        include:
        - master
        - releases/*
        exclude:
        - users/*

resources:
  containers:
  - container: linux
    image: ubuntu:16.04
  - container: windows
    image: myprivate.azurecr.io/windowsservercore:1803
    endpoint: my_acr_connection
  - container: my_service
    image: my_service:tag
    ports:
    - 8080:80 # bind container port 80 to 8080 on the host machine
    - 6379 # bind container port 6379 to a random available port on the host machine
    volumes:
    - /src/dir:/dst/dir # mount /src/dir on the host into /dst/dir in th- task: AzureWebApp@1
  
inputs:
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'azure-nice - Azure'
    appType: 'webApp'
    WebAppName: 'nice_app'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
  -task: GenerateYAMLTask@1
  inputs:
    inDir: '$(System.DefaultWorkingDirectory)'
    outDir: '$(Build.ArtifactStagingDirectory)'
    appType: 'webApp'
    appName: 'nice_app'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    deploymentMethod: 'runFromPackage'